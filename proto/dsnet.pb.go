// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: dsnet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// O defaults to DIRECT
type DeliveryType int32

const (
	DeliveryType_DIRECT    DeliveryType = 0 // default value if not set
	DeliveryType_BROADCAST DeliveryType = 1
	DeliveryType_GROUP     DeliveryType = 2
)

// Enum value maps for DeliveryType.
var (
	DeliveryType_name = map[int32]string{
		0: "DIRECT",
		1: "BROADCAST",
		2: "GROUP",
	}
	DeliveryType_value = map[string]int32{
		"DIRECT":    0,
		"BROADCAST": 1,
		"GROUP":     2,
	}
)

func (x DeliveryType) Enum() *DeliveryType {
	p := new(DeliveryType)
	*p = x
	return p
}

func (x DeliveryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryType) Descriptor() protoreflect.EnumDescriptor {
	return file_dsnet_proto_enumTypes[0].Descriptor()
}

func (DeliveryType) Type() protoreflect.EnumType {
	return &file_dsnet_proto_enumTypes[0]
}

func (x DeliveryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryType.Descriptor instead.
func (DeliveryType) EnumDescriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{0}
}

type VClock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vclock        map[string]uint64      `protobuf:"bytes,1,rep,name=vclock,proto3" json:"vclock,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VClock) Reset() {
	*x = VClock{}
	mi := &file_dsnet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VClock) ProtoMessage() {}

func (x *VClock) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VClock.ProtoReflect.Descriptor instead.
func (*VClock) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{0}
}

func (x *VClock) GetVclock() map[string]uint64 {
	if x != nil {
		return x.Vclock
	}
	return nil
}

type Envelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Payload       *structpb.Struct       `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	DeliveryType  DeliveryType           `protobuf:"varint,4,opt,name=delivery_type,json=deliveryType,proto3,enum=dsnet.DeliveryType" json:"delivery_type,omitempty"`
	Group         string                 `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	Operation     string                 `protobuf:"bytes,6,opt,name=operation,proto3" json:"operation,omitempty"`
	Seq           uint64                 `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	Vclock        *VClock                `protobuf:"bytes,8,opt,name=vclock,proto3" json:"vclock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_dsnet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{1}
}

func (x *Envelope) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Envelope) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Envelope) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Envelope) GetDeliveryType() DeliveryType {
	if x != nil {
		return x.DeliveryType
	}
	return DeliveryType_DIRECT
}

func (x *Envelope) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Envelope) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Envelope) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Envelope) GetVclock() *VClock {
	if x != nil {
		return x.Vclock
	}
	return nil
}

type RegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	mi := &file_dsnet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	mi := &file_dsnet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{3}
}

type SubscribeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeReq) Reset() {
	*x = SubscribeReq{}
	mi := &file_dsnet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeReq) ProtoMessage() {}

func (x *SubscribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeReq.ProtoReflect.Descriptor instead.
func (*SubscribeReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SubscribeReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type UnsubscribeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeReq) Reset() {
	*x = UnsubscribeReq{}
	mi := &file_dsnet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeReq) ProtoMessage() {}

func (x *UnsubscribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeReq.ProtoReflect.Descriptor instead.
func (*UnsubscribeReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{5}
}

func (x *UnsubscribeReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UnsubscribeReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type ClientToController struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientToController_Register
	//	*ClientToController_Send
	//	*ClientToController_Subscribe
	//	*ClientToController_Unsubscribe
	Payload       isClientToController_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientToController) Reset() {
	*x = ClientToController{}
	mi := &file_dsnet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientToController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientToController) ProtoMessage() {}

func (x *ClientToController) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientToController.ProtoReflect.Descriptor instead.
func (*ClientToController) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{6}
}

func (x *ClientToController) GetPayload() isClientToController_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientToController) GetRegister() *RegisterReq {
	if x != nil {
		if x, ok := x.Payload.(*ClientToController_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *ClientToController) GetSend() *Envelope {
	if x != nil {
		if x, ok := x.Payload.(*ClientToController_Send); ok {
			return x.Send
		}
	}
	return nil
}

func (x *ClientToController) GetSubscribe() *SubscribeReq {
	if x != nil {
		if x, ok := x.Payload.(*ClientToController_Subscribe); ok {
			return x.Subscribe
		}
	}
	return nil
}

func (x *ClientToController) GetUnsubscribe() *UnsubscribeReq {
	if x != nil {
		if x, ok := x.Payload.(*ClientToController_Unsubscribe); ok {
			return x.Unsubscribe
		}
	}
	return nil
}

type isClientToController_Payload interface {
	isClientToController_Payload()
}

type ClientToController_Register struct {
	Register *RegisterReq `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ClientToController_Send struct {
	Send *Envelope `protobuf:"bytes,2,opt,name=send,proto3,oneof"`
}

type ClientToController_Subscribe struct {
	Subscribe *SubscribeReq `protobuf:"bytes,3,opt,name=subscribe,proto3,oneof"`
}

type ClientToController_Unsubscribe struct {
	Unsubscribe *UnsubscribeReq `protobuf:"bytes,4,opt,name=unsubscribe,proto3,oneof"`
}

func (*ClientToController_Register) isClientToController_Payload() {}

func (*ClientToController_Send) isClientToController_Payload() {}

func (*ClientToController_Subscribe) isClientToController_Payload() {}

func (*ClientToController_Unsubscribe) isClientToController_Payload() {}

type ControllerToClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ControllerToClient_Register
	//	*ControllerToClient_Forward
	Payload       isControllerToClient_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControllerToClient) Reset() {
	*x = ControllerToClient{}
	mi := &file_dsnet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControllerToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerToClient) ProtoMessage() {}

func (x *ControllerToClient) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerToClient.ProtoReflect.Descriptor instead.
func (*ControllerToClient) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{7}
}

func (x *ControllerToClient) GetPayload() isControllerToClient_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ControllerToClient) GetRegister() *RegisterResp {
	if x != nil {
		if x, ok := x.Payload.(*ControllerToClient_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *ControllerToClient) GetForward() *Envelope {
	if x != nil {
		if x, ok := x.Payload.(*ControllerToClient_Forward); ok {
			return x.Forward
		}
	}
	return nil
}

type isControllerToClient_Payload interface {
	isControllerToClient_Payload()
}

type ControllerToClient_Register struct {
	Register *RegisterResp `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ControllerToClient_Forward struct {
	Forward *Envelope `protobuf:"bytes,2,opt,name=forward,proto3,oneof"`
}

func (*ControllerToClient_Register) isControllerToClient_Payload() {}

func (*ControllerToClient_Forward) isControllerToClient_Payload() {}

var File_dsnet_proto protoreflect.FileDescriptor

const file_dsnet_proto_rawDesc = "" +
	"\n" +
	"\vdsnet.proto\x12\x05dsnet\x1a\x1cgoogle/protobuf/struct.proto\"v\n" +
	"\x06VClock\x121\n" +
	"\x06vclock\x18\x01 \x03(\v2\x19.dsnet.VClock.VclockEntryR\x06vclock\x1a9\n" +
	"\vVclockEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\x88\x02\n" +
	"\bEnvelope\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x121\n" +
	"\apayload\x18\x03 \x01(\v2\x17.google.protobuf.StructR\apayload\x128\n" +
	"\rdelivery_type\x18\x04 \x01(\x0e2\x13.dsnet.DeliveryTypeR\fdeliveryType\x12\x14\n" +
	"\x05group\x18\x05 \x01(\tR\x05group\x12\x1c\n" +
	"\toperation\x18\x06 \x01(\tR\toperation\x12\x10\n" +
	"\x03seq\x18\a \x01(\x04R\x03seq\x12%\n" +
	"\x06vclock\x18\b \x01(\v2\r.dsnet.VClockR\x06vclock\"&\n" +
	"\vRegisterReq\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"\x0e\n" +
	"\fRegisterResp\"=\n" +
	"\fSubscribeReq\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\"?\n" +
	"\x0eUnsubscribeReq\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\"\xe8\x01\n" +
	"\x12ClientToController\x120\n" +
	"\bregister\x18\x01 \x01(\v2\x12.dsnet.RegisterReqH\x00R\bregister\x12%\n" +
	"\x04send\x18\x02 \x01(\v2\x0f.dsnet.EnvelopeH\x00R\x04send\x123\n" +
	"\tsubscribe\x18\x03 \x01(\v2\x13.dsnet.SubscribeReqH\x00R\tsubscribe\x129\n" +
	"\vunsubscribe\x18\x04 \x01(\v2\x15.dsnet.UnsubscribeReqH\x00R\vunsubscribeB\t\n" +
	"\apayload\"\x7f\n" +
	"\x12ControllerToClient\x121\n" +
	"\bregister\x18\x01 \x01(\v2\x13.dsnet.RegisterRespH\x00R\bregister\x12+\n" +
	"\aforward\x18\x02 \x01(\v2\x0f.dsnet.EnvelopeH\x00R\aforwardB\t\n" +
	"\apayload*4\n" +
	"\fDeliveryType\x12\n" +
	"\n" +
	"\x06DIRECT\x10\x00\x12\r\n" +
	"\tBROADCAST\x10\x01\x12\t\n" +
	"\x05GROUP\x10\x022^\n" +
	"\x11NetworkController\x12I\n" +
	"\rControlStream\x12\x19.dsnet.ClientToController\x1a\x19.dsnet.ControllerToClient(\x010\x01B\x13Z\x11dsnet/proto;protob\x06proto3"

var (
	file_dsnet_proto_rawDescOnce sync.Once
	file_dsnet_proto_rawDescData []byte
)

func file_dsnet_proto_rawDescGZIP() []byte {
	file_dsnet_proto_rawDescOnce.Do(func() {
		file_dsnet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dsnet_proto_rawDesc), len(file_dsnet_proto_rawDesc)))
	})
	return file_dsnet_proto_rawDescData
}

var file_dsnet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dsnet_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dsnet_proto_goTypes = []any{
	(DeliveryType)(0),          // 0: dsnet.DeliveryType
	(*VClock)(nil),             // 1: dsnet.VClock
	(*Envelope)(nil),           // 2: dsnet.Envelope
	(*RegisterReq)(nil),        // 3: dsnet.RegisterReq
	(*RegisterResp)(nil),       // 4: dsnet.RegisterResp
	(*SubscribeReq)(nil),       // 5: dsnet.SubscribeReq
	(*UnsubscribeReq)(nil),     // 6: dsnet.UnsubscribeReq
	(*ClientToController)(nil), // 7: dsnet.ClientToController
	(*ControllerToClient)(nil), // 8: dsnet.ControllerToClient
	nil,                        // 9: dsnet.VClock.VclockEntry
	(*structpb.Struct)(nil),    // 10: google.protobuf.Struct
}
var file_dsnet_proto_depIdxs = []int32{
	9,  // 0: dsnet.VClock.vclock:type_name -> dsnet.VClock.VclockEntry
	10, // 1: dsnet.Envelope.payload:type_name -> google.protobuf.Struct
	0,  // 2: dsnet.Envelope.delivery_type:type_name -> dsnet.DeliveryType
	1,  // 3: dsnet.Envelope.vclock:type_name -> dsnet.VClock
	3,  // 4: dsnet.ClientToController.register:type_name -> dsnet.RegisterReq
	2,  // 5: dsnet.ClientToController.send:type_name -> dsnet.Envelope
	5,  // 6: dsnet.ClientToController.subscribe:type_name -> dsnet.SubscribeReq
	6,  // 7: dsnet.ClientToController.unsubscribe:type_name -> dsnet.UnsubscribeReq
	4,  // 8: dsnet.ControllerToClient.register:type_name -> dsnet.RegisterResp
	2,  // 9: dsnet.ControllerToClient.forward:type_name -> dsnet.Envelope
	7,  // 10: dsnet.NetworkController.ControlStream:input_type -> dsnet.ClientToController
	8,  // 11: dsnet.NetworkController.ControlStream:output_type -> dsnet.ControllerToClient
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_dsnet_proto_init() }
func file_dsnet_proto_init() {
	if File_dsnet_proto != nil {
		return
	}
	file_dsnet_proto_msgTypes[6].OneofWrappers = []any{
		(*ClientToController_Register)(nil),
		(*ClientToController_Send)(nil),
		(*ClientToController_Subscribe)(nil),
		(*ClientToController_Unsubscribe)(nil),
	}
	file_dsnet_proto_msgTypes[7].OneofWrappers = []any{
		(*ControllerToClient_Register)(nil),
		(*ControllerToClient_Forward)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dsnet_proto_rawDesc), len(file_dsnet_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dsnet_proto_goTypes,
		DependencyIndexes: file_dsnet_proto_depIdxs,
		EnumInfos:         file_dsnet_proto_enumTypes,
		MessageInfos:      file_dsnet_proto_msgTypes,
	}.Build()
	File_dsnet_proto = out.File
	file_dsnet_proto_goTypes = nil
	file_dsnet_proto_depIdxs = nil
}
