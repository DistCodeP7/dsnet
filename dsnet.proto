syntax = "proto3";

package dsnet;

option go_package = "dsnet/proto;proto";

message VectorClock {
  map<string, uint64> clock = 1;
}

message Envelope {
  string from = 1;
  string to = 2;
  string payload = 3;
  MessageType type = 4;
  string group = 5; 
  uint64 seq = 6;
  VectorClock vclock = 7;
}

enum MessageType {
  DIRECT = 0;
  BROADCAST = 1;
  GROUP = 2;
  REGISTERED = 3;
}

message RegisterReq {
  string node_id = 1;
}

message SubscribeReq {
  string node_id = 1;
  string group = 2;
}

message UnsubscribeReq {
  string node_id = 1;
  string group = 2;
}

message ClientToController {
  oneof payload {
    RegisterReq register = 1;
    Envelope outbound = 2;
    SubscribeReq subscribe = 3;
    UnsubscribeReq unsubscribe = 4;
  }
}

message ControllerToClient {
  Envelope inbound = 1;
}

service NetworkController {
  rpc ControlStream(stream ClientToController) returns (stream ControllerToClient);
}
