// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.32.1
// source: dsnet.proto

package dsnet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_DIRECT     MessageType = 0
	MessageType_BROADCAST  MessageType = 1
	MessageType_GROUP      MessageType = 2
	MessageType_REGISTERED MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "DIRECT",
		1: "BROADCAST",
		2: "GROUP",
		3: "REGISTERED",
	}
	MessageType_value = map[string]int32{
		"DIRECT":     0,
		"BROADCAST":  1,
		"GROUP":      2,
		"REGISTERED": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_dsnet_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_dsnet_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{0}
}

// Message envelope
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    string      `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To      string      `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Payload string      `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Type    MessageType `protobuf:"varint,4,opt,name=type,proto3,enum=dsnet.MessageType" json:"type,omitempty"`
	Group   string      `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Envelope) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Envelope) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Envelope) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_DIRECT
}

func (x *Envelope) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

// Node register request
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type SubscribeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *SubscribeReq) Reset() {
	*x = SubscribeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeReq) ProtoMessage() {}

func (x *SubscribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeReq.ProtoReflect.Descriptor instead.
func (*SubscribeReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SubscribeReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type UnsubscribeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *UnsubscribeReq) Reset() {
	*x = UnsubscribeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeReq) ProtoMessage() {}

func (x *UnsubscribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeReq.ProtoReflect.Descriptor instead.
func (*UnsubscribeReq) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{3}
}

func (x *UnsubscribeReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UnsubscribeReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type ShimToCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ShimToCtrl_Register
	//	*ShimToCtrl_Outbound
	//	*ShimToCtrl_Subscribe
	//	*ShimToCtrl_Unsubscribe
	Payload isShimToCtrl_Payload `protobuf_oneof:"payload"`
}

func (x *ShimToCtrl) Reset() {
	*x = ShimToCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShimToCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShimToCtrl) ProtoMessage() {}

func (x *ShimToCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShimToCtrl.ProtoReflect.Descriptor instead.
func (*ShimToCtrl) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{4}
}

func (m *ShimToCtrl) GetPayload() isShimToCtrl_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ShimToCtrl) GetRegister() *RegisterReq {
	if x, ok := x.GetPayload().(*ShimToCtrl_Register); ok {
		return x.Register
	}
	return nil
}

func (x *ShimToCtrl) GetOutbound() *Envelope {
	if x, ok := x.GetPayload().(*ShimToCtrl_Outbound); ok {
		return x.Outbound
	}
	return nil
}

func (x *ShimToCtrl) GetSubscribe() *SubscribeReq {
	if x, ok := x.GetPayload().(*ShimToCtrl_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (x *ShimToCtrl) GetUnsubscribe() *UnsubscribeReq {
	if x, ok := x.GetPayload().(*ShimToCtrl_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

type isShimToCtrl_Payload interface {
	isShimToCtrl_Payload()
}

type ShimToCtrl_Register struct {
	Register *RegisterReq `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ShimToCtrl_Outbound struct {
	Outbound *Envelope `protobuf:"bytes,2,opt,name=outbound,proto3,oneof"`
}

type ShimToCtrl_Subscribe struct {
	Subscribe *SubscribeReq `protobuf:"bytes,3,opt,name=subscribe,proto3,oneof"`
}

type ShimToCtrl_Unsubscribe struct {
	Unsubscribe *UnsubscribeReq `protobuf:"bytes,4,opt,name=unsubscribe,proto3,oneof"`
}

func (*ShimToCtrl_Register) isShimToCtrl_Payload() {}

func (*ShimToCtrl_Outbound) isShimToCtrl_Payload() {}

func (*ShimToCtrl_Subscribe) isShimToCtrl_Payload() {}

func (*ShimToCtrl_Unsubscribe) isShimToCtrl_Payload() {}

// Controller -> Shim
type CtrlToShim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inbound *Envelope `protobuf:"bytes,1,opt,name=inbound,proto3" json:"inbound,omitempty"`
}

func (x *CtrlToShim) Reset() {
	*x = CtrlToShim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsnet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtrlToShim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtrlToShim) ProtoMessage() {}

func (x *CtrlToShim) ProtoReflect() protoreflect.Message {
	mi := &file_dsnet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtrlToShim.ProtoReflect.Descriptor instead.
func (*CtrlToShim) Descriptor() ([]byte, []int) {
	return file_dsnet_proto_rawDescGZIP(), []int{5}
}

func (x *CtrlToShim) GetInbound() *Envelope {
	if x != nil {
		return x.Inbound
	}
	return nil
}

var File_dsnet_proto protoreflect.FileDescriptor

var file_dsnet_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64,
	0x73, 0x6e, 0x65, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x26, 0x0a,
	0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x3f, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x6d, 0x54, 0x6f,
	0x43, 0x74, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74,
	0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x37, 0x0a, 0x0a, 0x43, 0x74, 0x72, 0x6c, 0x54, 0x6f, 0x53, 0x68, 0x69, 0x6d, 0x12, 0x29,
	0x0a, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x52, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2a, 0x43, 0x0a, 0x0b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x32, 0x4e,
	0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x11, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x53, 0x68, 0x69,
	0x6d, 0x54, 0x6f, 0x43, 0x74, 0x72, 0x6c, 0x1a, 0x11, 0x2e, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2e,
	0x43, 0x74, 0x72, 0x6c, 0x54, 0x6f, 0x53, 0x68, 0x69, 0x6d, 0x28, 0x01, 0x30, 0x01, 0x42, 0x1a,
	0x5a, 0x18, 0x67, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x64, 0x73, 0x6e, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_dsnet_proto_rawDescOnce sync.Once
	file_dsnet_proto_rawDescData = file_dsnet_proto_rawDesc
)

func file_dsnet_proto_rawDescGZIP() []byte {
	file_dsnet_proto_rawDescOnce.Do(func() {
		file_dsnet_proto_rawDescData = protoimpl.X.CompressGZIP(file_dsnet_proto_rawDescData)
	})
	return file_dsnet_proto_rawDescData
}

var file_dsnet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dsnet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dsnet_proto_goTypes = []any{
	(MessageType)(0),       // 0: dsnet.MessageType
	(*Envelope)(nil),       // 1: dsnet.Envelope
	(*RegisterReq)(nil),    // 2: dsnet.RegisterReq
	(*SubscribeReq)(nil),   // 3: dsnet.SubscribeReq
	(*UnsubscribeReq)(nil), // 4: dsnet.UnsubscribeReq
	(*ShimToCtrl)(nil),     // 5: dsnet.ShimToCtrl
	(*CtrlToShim)(nil),     // 6: dsnet.CtrlToShim
}
var file_dsnet_proto_depIdxs = []int32{
	0, // 0: dsnet.Envelope.type:type_name -> dsnet.MessageType
	2, // 1: dsnet.ShimToCtrl.register:type_name -> dsnet.RegisterReq
	1, // 2: dsnet.ShimToCtrl.outbound:type_name -> dsnet.Envelope
	3, // 3: dsnet.ShimToCtrl.subscribe:type_name -> dsnet.SubscribeReq
	4, // 4: dsnet.ShimToCtrl.unsubscribe:type_name -> dsnet.UnsubscribeReq
	1, // 5: dsnet.CtrlToShim.inbound:type_name -> dsnet.Envelope
	5, // 6: dsnet.NetworkController.ControlStream:input_type -> dsnet.ShimToCtrl
	6, // 7: dsnet.NetworkController.ControlStream:output_type -> dsnet.CtrlToShim
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_dsnet_proto_init() }
func file_dsnet_proto_init() {
	if File_dsnet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dsnet_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsnet_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsnet_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsnet_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UnsubscribeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsnet_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ShimToCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsnet_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CtrlToShim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dsnet_proto_msgTypes[4].OneofWrappers = []any{
		(*ShimToCtrl_Register)(nil),
		(*ShimToCtrl_Outbound)(nil),
		(*ShimToCtrl_Subscribe)(nil),
		(*ShimToCtrl_Unsubscribe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dsnet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dsnet_proto_goTypes,
		DependencyIndexes: file_dsnet_proto_depIdxs,
		EnumInfos:         file_dsnet_proto_enumTypes,
		MessageInfos:      file_dsnet_proto_msgTypes,
	}.Build()
	File_dsnet_proto = out.File
	file_dsnet_proto_rawDesc = nil
	file_dsnet_proto_goTypes = nil
	file_dsnet_proto_depIdxs = nil
}
